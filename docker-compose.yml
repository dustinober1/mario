version: '3.8'

services:
  mario-rl:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
      args:
        - PYTHON_VERSION=3.10
    image: mario-rl:latest
    container_name: mario-rl-training
    
    # Environment variables
    environment:
      - DISPLAY=${DISPLAY:-:0}
      - PYTHONPATH=/workspace
      - PYTORCH_ENABLE_MPS_FALLBACK=1
      - CUDA_VISIBLE_DEVICES=${CUDA_VISIBLE_DEVICES:-0}
    
    # Volume mounts for persistent data
    volumes:
      - ./src:/workspace/src:ro                    # Source code (read-only)
      - ./training_scripts:/workspace/training_scripts:ro  # Training scripts (read-only)
      - ./models:/workspace/models                 # Models (persistent)
      - ./videos:/workspace/videos                 # Videos (persistent)
      - ./logs:/workspace/logs                     # Logs (persistent)
      - ./data:/workspace/data                     # Data cache (persistent)
      - /tmp/.X11-unix:/tmp/.X11-unix:rw          # X11 for display (Linux)
    
    # Working directory
    working_dir: /workspace
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 16G
        reservations:
          memory: 4G
    
    # Keep container running
    tty: true
    stdin_open: true
    
    # Default command
    command: /bin/bash
    
    # Network mode
    network_mode: host
    
    # Runtime for GPU support (uncomment for NVIDIA GPU)
    # runtime: nvidia
    
    # Device access for GPU (uncomment for NVIDIA GPU)
    # devices:
    #   - /dev/nvidia0:/dev/nvidia0
    #   - /dev/nvidiactl:/dev/nvidiactl
    #   - /dev/nvidia-uvm:/dev/nvidia-uvm

  # Development service with additional tools
  mario-rl-dev:
    extends: mario-rl
    build:
      target: development
    container_name: mario-rl-dev
    
    # Additional volumes for development
    volumes:
      - ./src:/workspace/src                       # Source code (read-write for dev)
      - ./training_scripts:/workspace/training_scripts  # Training scripts (read-write)
      - ./models:/workspace/models                 # Models (persistent)
      - ./videos:/workspace/videos                 # Videos (persistent)
      - ./logs:/workspace/logs                     # Logs (persistent)
      - ./data:/workspace/data                     # Data cache (persistent)
      - ./tests:/workspace/tests                   # Tests (read-write)
      - ./docs:/workspace/docs                     # Documentation (read-write)
      - /tmp/.X11-unix:/tmp/.X11-unix:rw          # X11 for display
    
    # Expose Jupyter port for development
    ports:
      - "8888:8888"
      - "6006:6006"  # TensorBoard
    
    # Development environment variables
    environment:
      - DISPLAY=${DISPLAY:-:0}
      - PYTHONPATH=/workspace
      - PYTORCH_ENABLE_MPS_FALLBACK=1
      - CUDA_VISIBLE_DEVICES=${CUDA_VISIBLE_DEVICES:-0}
      - JUPYTER_ENABLE_LAB=yes
    
    # Start Jupyter by default in dev mode
    command: >
      bash -c "
        echo 'Starting Mario RL Development Environment...' &&
        echo 'Jupyter Lab will be available at: http://localhost:8888' &&
        echo 'TensorBoard will be available at: http://localhost:6006' &&
        jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password=''
      "

# Named volumes for better data management
volumes:
  mario_models:
    driver: local
  mario_videos:
    driver: local
  mario_logs:
    driver: local
  mario_data:
    driver: local

# Networks
networks:
  default:
    driver: bridge